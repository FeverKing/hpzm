package fingerprints

import (
	"fmt"
	"testing"
)

func TestDeserializeFp(t *testing.T) {
	data := "# XIAOMI CR8809\nClass XIAOMI | CR8809 || specialized\nSEQ(SP=105%GCD=1%ISR=10A%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=106%GCD=1%ISR=10A%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=107%GCD=1%ISR=10A%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=EE%GCD=1%ISR=FA%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=FF%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS=7)\nOPS(O1=M5B4ST11NW5%O2=M5B4ST11NW5%O3=M5B4NNT11NW5%O4=M5B4ST11NW5%O5=M5B4ST11NW5%O6=M5B4ST11)\nWIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)\nECN(R=Y%DF=Y%T=40%W=7210%O=M5B4NNSNW5%CC=N%Q=)\nT1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)\nT2(R=N)\nT3(R=N)\nT4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)\nT6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT7(R=N)\nU1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)\nIE(R=Y%DFI=N%T=40%CD=S)\n"
	data = "SEQ(SP=EE-107%GCD=1-2%ISR=FA-10D%TI=Z%CI=I%II=I%TS=0)\nOPS(O1=M5B4ST11NW5%O2=M5B4ST11NW5%O3=M5B4NNT11NW5%O4=M5B4ST11NW5%O5=M5B4ST11NW5%O6=M5B4ST11)\nWIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)\nECN(R=Y%DF=Y%T=0%W=0%O=M5B4NNSNW5%CC=N%Q=)\nT1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)\nT2(R=N)\nT3(R=N)\nT4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)\nT6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT7(R=N)\nU1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)\nIE(R=Y%DFI=N%T=40%CD=S)"
	fp, _ := DeserializeFp(data)
	if fp == nil {
		t.Error("fp is nil")
	}
	fmt.Printf("%+v\n", fp)
}

func TestSerializeFp(t *testing.T) {
	data := "# XIAOMI CR8809\nClass XIAOMI | CR8809 || specialized\nSEQ(SP=105%GCD=1%ISR=10A%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=106%GCD=1%ISR=10A%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=107%GCD=1%ISR=10A%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=EE%GCD=1%ISR=FA%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=FF%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS=7)\nOPS(O1=M5B4ST11NW5%O2=M5B4ST11NW5%O3=M5B4NNT11NW5%O4=M5B4ST11NW5%O5=M5B4ST11NW5%O6=M5B4ST11)\nWIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)\nECN(R=Y%DF=Y%T=40%W=7210%O=M5B4NNSNW5%CC=N%Q=)\nT1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)\nT2(R=N)\nT3(R=N)\nT4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)\nT6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT7(R=N)\nU1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)\nIE(R=Y%DFI=N%T=40%CD=S)\n"
	fp, _ := DeserializeFp(data)
	if fp == nil {
		t.Error("fp is nil")
	}
	res := SerializeFp(fp)
	fmt.Printf("%s\n", res)

}

func TestGenFinalFingerprint(t *testing.T) {

	d := []string{
		"# XIAOMI CR8809\nClass XIAOMI | CR8809 || specialized\nSEQ(SP=102%GCD=1%ISR=10D%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=106%GCD=1%ISR=105%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=107%GCD=1%ISR=109%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=FC%GCD=2%ISR=105%TI=Z%CI=I%II=I%TS=7)\nOPS(O1=M5B4ST11NW5%O2=M5B4ST11NW5%O3=M5B4NNT11NW5%O4=M5B4ST11NW5%O5=M5B4ST11NW5%O6=M5B4ST11)\nWIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)\nECN(R=Y%DF=Y%T=40%W=7210%O=M5B4NNSNW5%CC=N%Q=)\nT1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)\nT2(R=N)\nT3(R=N)\nT4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)\nT6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT7(R=N)\nU1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)\nIE(R=Y%DFI=N%T=40%CD=S)",
		"# XIAOMI CR8809\nClass XIAOMI | CR8809 || specialized\nSEQ(SP=105%GCD=1%ISR=10A%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=106%GCD=1%ISR=10A%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=107%GCD=1%ISR=10A%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=EE%GCD=1%ISR=FA%TI=Z%CI=I%II=I%TS=7)\nSEQ(SP=FF%GCD=1%ISR=10B%TI=Z%CI=I%II=I%TS=7)\nOPS(O1=M5B4ST11NW5%O2=M5B4ST11NW5%O3=M5B4NNT11NW5%O4=M5B4ST11NW5%O5=M5B4ST11NW5%O6=M5B4ST11)\nWIN(W1=7120%W2=7120%W3=7120%W4=7120%W5=7120%W6=7120)\nECN(R=Y%DF=Y%T=40%W=7210%O=M5B4NNSNW5%CC=N%Q=)\nT1(R=Y%DF=Y%T=40%S=O%A=S+%F=AS%RD=0%Q=)\nT2(R=N)\nT3(R=N)\nT4(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT5(R=Y%DF=Y%T=40%W=0%S=Z%A=S+%F=AR%O=%RD=0%Q=)\nT6(R=Y%DF=Y%T=40%W=0%S=A%A=Z%F=R%O=%RD=0%Q=)\nT7(R=N)\nU1(R=Y%DF=N%T=40%IPL=164%UN=0%RIPL=G%RID=G%RIPCK=G%RUCK=G%RUD=G)\nIE(R=Y%DFI=N%T=40%CD=S)\n",
	}
	fps, _ := DeserializeFpsFromStr(d)
	if fps == nil {
		t.Error("fp is nil")
	}
	res := GenFinalFingerprint(fps)
	fmt.Printf("%s\n", res)
}
